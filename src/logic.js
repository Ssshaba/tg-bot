import { openai } from './openai.js';
import { Markup } from 'telegraf';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

export const INITIAL_SESSION = {
  messages: [],
};

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const imagePath = join(__dirname, './startphoto.jpg');

export async function initCommand(ctx) {
  ctx.session = { ...INITIAL_SESSION };


  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
  await ctx.replyWithPhoto(
    { source: imagePath },
    {
      caption: '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ ChatGPT & –≤ —Ç–≤–æ—ë–º Telegram!ü§ñ\n–¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!üó£\n\n‚Ä¢ –û–±—â–∞–π—Ç–µ—Å—å —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.\n‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ–º–æ—á—å –≤–∞–º —Å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏, –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n–ú–æ–≥—É –ø–æ–º–æ—á—å —Å –ª—é–±–æ–π –∑–∞–¥–∞—á–µ–π –∏ –≤–æ–ø—Ä–æ—Å–æ–º —Ç–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—ã–≤–∞–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç—ã –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —Å–æ –º–Ω–æ–π. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —ç—Ç–æ, –∏ –∫–∞–∫ –∏—Ö –ø—Ä–∏–º–µ–Ω—è—Ç—å, –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ—Ä—ã –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫–æ –º–Ω–µü§´',

    }
  );
  const keyboard = Markup.inlineKeyboard([
    Markup.button.callback('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'button_clicked'),
  ]);
  await ctx.reply('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüòâ', keyboard);
}


export async function initCommandNew(ctx) {
  ctx.session = { ...INITIAL_SESSION }
  await ctx.reply('–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
}


export async function processTextToChat(ctx, content) {
  try {
    ctx.session.messages.push({ role: openai.roles.USER, content });

    const response = await openai.chat(ctx.session.messages);

    ctx.session.messages.push({
      role: openai.roles.ASSISTANT,
      content: response.content,
    });

    await ctx.reply(response.content);
  } catch (e) {
    console.log('Error while proccesing text to gpt', e.message);
  }
}
